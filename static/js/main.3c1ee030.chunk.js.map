{"version":3,"sources":["components/PersonDetails/PersonDetails.module.scss","components/FamilyTree/types.ts","app/hooks.ts","components/FamilyTree/reducer/familyReducer.ts","components/PersonDetails/PersonDetails.tsx","components/CreateEditForm/CreateEditForm.tsx","components/DeleteDialog/DeleteDialog.tsx","components/FamilyTree/FamilyTree.tsx","components/Header/Header.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","components/FamilyTree/FamilyTree.module.scss","components/CreateEditForm/CreateEditForm.module.css","components/Header/Header.module.scss"],"names":["module","exports","FamilyRelationship","useAppDispatch","useDispatch","useAppSelector","useSelector","familySlice","createSlice","name","initialState","members","id","firstName","lastName","birthDate","deathDate","parentId","picture","relationship","children","reducers","addMember","state","payload","formData","selectedMember","Sibling","newMember","Date","now","toString","Math","random","substr","removeMember","updateMember","actions","selectFamilyMembers","dataset","hashTable","Object","create","forEach","member","dataTree","push","createDataTree","values","family","PersonDetails","className","styles","personPicture","src","alt","personName","validationSchema","Yup","required","CreateEditForm","isEditMode","handleClose","dispatch","parent","formik","useFormik","initialValues","onSubmit","parentDetails","Typography","formTitle","variant","component","formContainer","handleSubmit","FormControl","fullWidth","error","touched","Boolean","errors","InputLabel","Select","labelId","value","onChange","event","setFieldValue","target","MenuItem","Child","FormHelperText","TextField","label","handleChange","helperText","DatePicker","mask","inputFormat","option","isNaN","parse","toISOString","split","renderInput","params","Button","color","type","onClick","DeleteDialog","props","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","FamilyTree","editingView","useState","isDrawerOpen","setIsDrawerOpen","setSelectedMember","setIsEditMode","familyMembers","useEffect","length","toggleDrawer","editMode","key","React","isDialogOpen","setIsDialogOpen","openDeleteDialog","familyMember","handleCloseDialog","treeContainer","renderMembers","map","personContainer","actionButtons","Fab","miniFab","PersonAdd","fontSize","Create","PersonRemove","Drawer","anchor","classes","paper","drawerPaper","Header","location","useLocation","navContainer","title","pageURL","listItem","pathname","active","to","link","path","App","LocalizationProvider","dateAdapter","AdapterDateFns","store","configureStore","reducer","familyReducer","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3c1ee030.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PersonDetails\":\"PersonDetails_PersonDetails__1Bp2N\",\"personPicture\":\"PersonDetails_personPicture__33QtK\",\"personName\":\"PersonDetails_personName__3i9Fr\"};","export interface FamilyMember {\r\n    id: string;\r\n    parentId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    birthDate: string;\r\n    deathDate: string;\r\n    picture: string;\r\n    relationship: string;\r\n    children: any[] | FamilyMember[];\r\n}\r\n\r\nexport enum FamilyRelationship {\r\n    Child = 'CHILD',\r\n    Sibling = 'SIBLING',\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../../app/store';\nimport { FamilyMember, FamilyRelationship } from '../types';\n\nexport interface FamilyTreeState {\n    members: {[name: string]: FamilyMember};\n}\n\ninterface FamilyAction {\n    formData: FamilyMember | any;\n    selectedMember: FamilyMember;\n}\n\nconst initialState: FamilyTreeState = {\n    members: {\n        '1': {\n            id: '1',\n            firstName: 'Gandalf',\n            lastName: 'The Grey',\n            birthDate: '1800-08-08',\n            deathDate: '',\n            parentId: '',\n            picture: 'https://static.wikia.nocookie.net/lotr/images/e/e7/Gandalf_the_Grey.jpg',\n            relationship: 'CHILD',\n            children: [\n                '2',\n                '3'\n            ]\n        },\n        '2': {\n            id: '2',\n            firstName: 'Gollum',\n            lastName: '',\n            birthDate: '1900-08-08',\n            deathDate: '',\n            picture: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvJrlM-cfSK6IuVGnTh0KQzheSKkMzIlaoGw',\n            parentId: '1',\n            relationship: '',\n            children: []\n        },\n        '3': {\n            id: '3',\n            firstName: 'Sauron',\n            lastName: '',\n            birthDate: '1900-08-08',\n            deathDate: '',\n            picture: 'https://i.redd.it/be1sw1tji5s51.jpg',\n            parentId: '1',\n            relationship: '',\n            children: []\n        }\n    }\n};\n\nconst uniqueId = () => {\n    const dateString = Date.now().toString(36);\n    const randomness = Math.random().toString(36).substr(2);\n    return dateString + randomness;\n};\n\nconst familySlice = createSlice({\n    name: 'family',\n    initialState,\n    reducers: {\n        addMember: (state, {payload: {formData, selectedMember}}: PayloadAction<FamilyAction>) => {\n            const parentId = formData.relationship === FamilyRelationship.Sibling ? state.members[selectedMember.parentId]?.id || '' : selectedMember.id;\n\n            const newMember = {\n                ...formData,\n                id: uniqueId(),\n                children: [],\n                parentId\n            };\n\n            state.members[newMember.id] = newMember;\n        },\n        removeMember: (state, {payload}: PayloadAction<FamilyMember>) => {\n            delete state.members[payload.id];\n        },\n        updateMember: (state, {payload: {formData, selectedMember}}: PayloadAction<FamilyAction>) => {\n            const parentId = formData.relationship === FamilyRelationship.Sibling ? state.members[selectedMember.parentId].parentId : selectedMember.parentId || '';\n\n            state.members[selectedMember.id] = {\n                ...state.members[selectedMember.id],\n                ...formData,\n                parentId\n            };\n        },\n    },\n});\n\nconst createDataTree = (dataset: FamilyMember[]): FamilyMember[] => {\n    const hashTable = Object.create(null);\n    dataset.forEach((member: any) => hashTable[member.id] = {...member, children: []});\n    const dataTree = [] as FamilyMember[];\n    dataset.forEach((member: FamilyMember) => {\n        if (member.parentId) {\n            hashTable[member.parentId]?.children.push(hashTable[member.id]);\n        }\n        else {\n            dataTree.push(hashTable[member.id]);\n        }\n    });\n    return dataTree;\n};\n\nexport const {addMember, removeMember, updateMember} = familySlice.actions;\nexport const selectMemberById = (id: string) => (state: RootState) => state.family.members[id];\nexport const selectFamilyMembers = (state: RootState) => createDataTree(Object.values(state.family.members));\nexport default familySlice.reducer;\n","import React from 'react';\nimport styles from './PersonDetails.module.scss';\nimport { FamilyMember } from '../FamilyTree/types';\n\nconst PersonDetails = ({member}: {member: FamilyMember}) =>\n    (\n        <div className={styles.PersonDetails} data-testid=\"PersonDetails\">\n            <div className={styles.personPicture}>\n                {member.picture && <img src={member.picture} alt=\"memberPicture\"/>}\n            </div>\n            <div className={styles.personName}>\n                <div>{member.firstName}</div>\n                <div>{member.lastName}</div>\n                <div>{member.birthDate} - {member.deathDate}</div>\n            </div>\n        </div>\n    );\n\nexport default PersonDetails;\n","import React from 'react';\nimport styles from './CreateEditForm.module.css';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { addMember, selectMemberById, updateMember } from '../FamilyTree/reducer/familyReducer';\nimport { FamilyMember, FamilyRelationship } from '../FamilyTree/types';\nimport * as Yup from 'yup';\nimport { Button, FormControl, FormHelperText, InputLabel, MenuItem, Select, TextField, Typography } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { DatePicker } from '@mui/lab/';\nimport PersonDetails from '../PersonDetails/PersonDetails';\n\nconst validationSchema = Yup.object({\n    firstName: Yup.string().required('First Name is required'),\n    lastName: Yup.string().required('Last Name is required'),\n    birthDate: Yup.date().required('Birth date is required'),\n    deathDate: Yup.string(),\n    picture: Yup.string(),\n    relationship: Yup.string().required('Relationship is required'),\n});\n\nconst CreateEditForm = ({selectedMember, isEditMode, handleClose}: {selectedMember: FamilyMember, isEditMode: boolean, handleClose: any}) => {\n    const dispatch = useAppDispatch();\n    const parent = useAppSelector(selectMemberById(isEditMode ? selectedMember.parentId : selectedMember.id));\n\n    const formik = useFormik({\n        initialValues: (isEditMode ? {...selectedMember} :\n            {\n                firstName: '',\n                lastName: '',\n                birthDate: '',\n                deathDate: '',\n                picture: '',\n                relationship: 'CHILD'\n            }),\n        validationSchema: validationSchema,\n        onSubmit: (formData) => {\n            if (isEditMode) {\n                dispatch(updateMember({formData, selectedMember}));\n            }\n            else {\n                dispatch(addMember({formData, selectedMember}));\n            }\n\n            handleClose();\n        },\n    });\n\n    const handleCancel = () => {\n        handleClose();\n    };\n\n    return (\n        <div className={styles.CreateEditForm} data-testid=\"CreateEditForm\">\n            <div className={styles.parentDetails}>\n                {isEditMode &&\n                <div>\n                    <Typography className={styles.formTitle} variant=\"h4\" component=\"h4\">Editing:</Typography>\n                    <PersonDetails member={selectedMember}></PersonDetails>\n                </div>\n                }\n                <div>\n                    {!isEditMode ? <Typography className={styles.formTitle} variant=\"h4\">Creating relationship to:</Typography>\n                        : <Typography className={styles.formTitle} variant=\"subtitle1\">Parent:</Typography>\n                    }\n                    {parent && <PersonDetails member={parent}></PersonDetails>}\n                </div>\n            </div>\n            <form className={styles.formContainer} onSubmit={formik.handleSubmit}>\n                <FormControl fullWidth error={formik.touched.relationship && Boolean(formik.errors.relationship)}>\n                    <InputLabel id=\"relationship-label\">Relationship to {isEditMode ? 'current parent' : 'selected member'}</InputLabel>\n                    <Select\n                        labelId=\"relationship-label\"\n                        id=\"relationship\"\n                        value={formik.values.relationship}\n                        onChange={(event: any) => formik.setFieldValue('relationship', event.target.value)}\n                    >\n                        <MenuItem value={FamilyRelationship.Child}>Child</MenuItem>\n                        <MenuItem value={FamilyRelationship.Sibling}>Sibling</MenuItem>\n                    </Select>\n                    {formik.errors.relationship && <FormHelperText>{formik.errors.relationship}</FormHelperText>}\n                </FormControl>\n                <TextField\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    label=\"FirstName\"\n                    value={formik.values.firstName}\n                    onChange={formik.handleChange}\n                    error={formik.touched.firstName && Boolean(formik.errors.firstName)}\n                    helperText={formik.touched.firstName && formik.errors.firstName}\n                />\n                <TextField\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    label=\"LastName\"\n                    value={formik.values.lastName}\n                    onChange={formik.handleChange}\n                    error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n                    helperText={formik.touched.lastName && formik.errors.lastName}\n                />\n                <FormControl error={formik.touched.birthDate && Boolean(formik.errors.birthDate)}>\n                    <DatePicker\n                        label=\"Birth Date\"\n                        mask={'____/__/__'}\n                        inputFormat=\"yyyy/MM/dd\"\n                        value={formik.values.birthDate}\n                        onChange={(option: any | Date) => formik.setFieldValue('birthDate', !isNaN(Date.parse(option)) && option.toISOString().split('T')[0])}\n                        renderInput={(params: any) =>\n                            <TextField {...params}\n                                       id=\"birthDate\"\n                                       name=\"birthDate\"\n                                       error={formik.touched.birthDate && Boolean(formik.errors.birthDate)}\n                            />\n                        }\n                    />\n                    {formik.errors.birthDate && <FormHelperText>{formik.errors.birthDate}</FormHelperText>}\n                </FormControl>\n                <DatePicker\n                    label=\"Death Date\"\n                    mask={'____/__/__'}\n                    inputFormat=\"yyyy/MM/dd\"\n                    value={formik.values.deathDate}\n                    onChange={(option: any | Date) => formik.setFieldValue('deathDate', !isNaN(Date.parse(option)) && option.toISOString().split('T')[0])}\n                    renderInput={(params: any) =>\n                        <TextField {...params}\n                                   id=\"deathDate\"\n                                   name=\"deathDate\"\n                                   error={formik.touched.deathDate && Boolean(formik.errors.deathDate)}\n                        />\n                    }\n                />\n                <TextField\n                    fullWidth\n                    id=\"picture\"\n                    name=\"picture\"\n                    label=\"Picture link\"\n                    value={formik.values.picture}\n                    onChange={formik.handleChange}\n                    error={formik.touched.picture && Boolean(formik.errors.picture)}\n                    helperText={formik.touched.picture && formik.errors.picture}\n                />\n                <div>\n                    <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">Save</Button>\n                    <Button color=\"primary\" variant=\"outlined\" fullWidth type=\"button\" onClick={handleCancel}>Cancel</Button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default CreateEditForm;\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\nconst DeleteDialog = (props: {open: boolean, onClose: () => void, onSubmit: () => void}) =>\n    <Dialog\n        open={props.open}\n        onClose={props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n    >\n        <DialogTitle id=\"alert-dialog-title\">\n            {'Do you want to delete?'}\n        </DialogTitle>\n        <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n                Do you want to delete family member with its relationships ?\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={props.onClose}>Disagree</Button>\n            <Button onClick={props.onSubmit}\n                    autoFocus\n                    color=\"primary\"\n                    variant=\"contained\">Agree</Button>\n        </DialogActions>\n    </Dialog>;\n\nexport default DeleteDialog;\n","import React, { useEffect, useState } from 'react';\r\nimport { FamilyMember } from './types';\r\nimport styles from './FamilyTree.module.scss';\r\nimport { Drawer, Fab } from '@mui/material';\r\nimport { Create, PersonAdd, PersonRemove } from '@mui/icons-material';\r\nimport CreateEditForm from '../CreateEditForm/CreateEditForm';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { addMember, removeMember, selectFamilyMembers } from './reducer/familyReducer';\r\nimport PersonDetails from '../PersonDetails/PersonDetails';\r\nimport DeleteDialog from '../DeleteDialog/DeleteDialog';\r\n\r\nconst FamilyTree = ({editingView}: {editingView?: boolean}) => {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const [selectedMember, setSelectedMember] = useState({} as FamilyMember);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const familyMembers = useAppSelector(selectFamilyMembers);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!familyMembers.length) {\r\n            dispatch(addMember({\r\n                formData: {\r\n                    id: '0',\r\n                    parentId: '',\r\n                    relationship: '',\r\n                    firstName: 'Root',\r\n                    lastName: '',\r\n                    birthDate: '',\r\n                    deathDate: '',\r\n                    picture: '',\r\n                    children: [],\r\n                },\r\n                selectedMember: {} as FamilyMember\r\n            }));\r\n        }\r\n    }, [dispatch, familyMembers]);\r\n\r\n    const toggleDrawer = (member: FamilyMember, editMode?: boolean) => (event: any) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setIsEditMode(!!editMode);\r\n        setSelectedMember(member);\r\n        setIsDrawerOpen(!isDrawerOpen);\r\n    };\r\n\r\n    const [isDialogOpen, setIsDialogOpen] = React.useState(false);\r\n\r\n    const openDeleteDialog = (familyMember: FamilyMember) => (event: any) => {\r\n        setSelectedMember(familyMember);\r\n        setIsDialogOpen(true);\r\n    };\r\n\r\n    const handleCloseDialog = () => {\r\n        setIsDialogOpen(false);\r\n    };\r\n\r\n    const deletePerson = (familyMember: FamilyMember) => {\r\n        dispatch(removeMember(familyMember));\r\n        handleCloseDialog();\r\n    };\r\n\r\n    const renderMemberButtons = (familyMember: FamilyMember): any =>\r\n        (\r\n            <>\r\n                <Fab onClick={toggleDrawer(familyMember)} className={styles.miniFab}> <PersonAdd fontSize=\"small\"/></Fab>\r\n                <Fab onClick={toggleDrawer(familyMember, true)} className={styles.miniFab}> <Create fontSize=\"small\"/></Fab>\r\n                <Fab onClick={openDeleteDialog(familyMember)} className={styles.miniFab}> <PersonRemove fontSize=\"small\"/></Fab>\r\n            </>\r\n        );\r\n\r\n    const renderMembers = (members: FamilyMember[]) =>\r\n        (\r\n            <ul>\r\n                {\r\n                    members.map((member: FamilyMember) =>\r\n                        (\r\n                            <li key={member.id}>\r\n                                <div className={styles.personContainer}>\r\n                                    <PersonDetails member={member}/>\r\n                                    <div className={styles.actionButtons}>\r\n                                        {editingView && <div> {renderMemberButtons(member)}</div>}\r\n                                    </div>\r\n                                </div>\r\n                                {!!member.children.length && renderMembers(member.children)}\r\n                            </li>\r\n                        ))\r\n                }\r\n            </ul>\r\n        );\r\n\r\n    return (\r\n        <div className={styles.FamilyTree}>\r\n            <div className={styles.treeContainer}>\r\n                {renderMembers(familyMembers)}\r\n            </div>\r\n            <Drawer\r\n                anchor=\"right\"\r\n                open={isDrawerOpen}\r\n                onClose={toggleDrawer({} as FamilyMember)}\r\n                classes={{paper: styles.drawerPaper}}\r\n            >\r\n                {<CreateEditForm selectedMember={selectedMember}\r\n                                 isEditMode={isEditMode}\r\n                                 handleClose={toggleDrawer({} as FamilyMember)}\r\n                ></CreateEditForm>}\r\n            </Drawer>\r\n            <DeleteDialog open={isDialogOpen} onClose={handleCloseDialog} onSubmit={() => deletePerson(selectedMember)}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FamilyTree;\r\n","import React from 'react';\nimport styles from './Header.module.scss';\nimport { Link, Route, Switch, useLocation } from 'react-router-dom';\nimport FamilyTree from '../FamilyTree/FamilyTree';\n\nconst Header = () => {\n    const location = useLocation();\n    const menuItems = [\n        {\n            title: 'View Tree',\n            pageURL: '/'\n        },\n        {\n            title: 'Edit Tree',\n            pageURL: '/edit'\n        }\n    ];\n\n    return (\n        <div className={styles.Header}>\n            <ul className={styles.navContainer}>\n                {menuItems.map(({title, pageURL}: any) =>\n                    (\n                        <li key={title} className={`${styles.listItem} ${location.pathname === pageURL && styles.active}`}>\n                            <Link to={pageURL} className={styles.link}>{title}</Link>\n                        </li>\n                    ))\n                }\n            </ul>\n            <Switch>\n                <Route path=\"/edit\">\n                    <FamilyTree editingView={true}/>\n                </Route>\n                <Route path=\"/\" component={FamilyTree}>\n                </Route>\n            </Switch>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport './App.scss';\nimport 'typeface-roboto';\nimport Header from './components/Header/Header';\nimport { BrowserRouter } from 'react-router-dom';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/lab';\n\nfunction App() {\n    return (\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Header></Header>\n                </BrowserRouter>\n            </div>\n        </LocalizationProvider>\n    );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport familyReducer from '../components/FamilyTree/reducer/familyReducer';\n\nexport const store = configureStore({\n    reducer: {\n        family: familyReducer\n    },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FamilyTree\":\"FamilyTree_FamilyTree__3_hrA\",\"personContainer\":\"FamilyTree_personContainer__xP1Sc\",\"actionButtons\":\"FamilyTree_actionButtons__2UUv6\",\"miniFab\":\"FamilyTree_miniFab__3Xi-q\",\"drawerPaper\":\"FamilyTree_drawerPaper__1Rrm6\",\"treeContainer\":\"FamilyTree_treeContainer__2t9MC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateEditForm\":\"CreateEditForm_CreateEditForm__26y4T\",\"formContainer\":\"CreateEditForm_formContainer___HcJp\",\"parentDetails\":\"CreateEditForm_parentDetails__sRzkV\",\"formTitle\":\"CreateEditForm_formTitle__3q2qS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navContainer\":\"Header_navContainer__RAlFR\",\"listItem\":\"Header_listItem__3IFPB\",\"link\":\"Header_link__1VmKW\",\"active\":\"Header_active__3F14A\"};"],"sourceRoot":""}